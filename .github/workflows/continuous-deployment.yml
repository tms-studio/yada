# This is a basic workflow to help you get started with Actions

name: Kubernetes Deployment

# Controls when the action will run. 
on:
  # Automatically deploy latest delivered version after Continuous Delivery workflow passed
  workflow_run:
    workflows:
      - Continuous Delivery
    types: 
      - completed

  # Allows you to run this workflow manually to re-deploy latest version
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checks-out repository under, so job can access "deployment.yml"
      - uses: actions/checkout@v2
      
      # If action was triggered manually, set deployed version to latest
      - name: Job triggered manually, deploying latest version
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "DEPLOYED_VERSION=latest" >> $GITHUB_ENV
      
      # If action was triggered by a release, set deployed version to release version
      - name: Job triggered by a release, deploying released version
        if: github.event_name == 'workflow_run'
        run: |
          echo "DEPLOYED_VERSION=${{github.event.workflow_run.head_branch}}" >> $GITHUB_ENV
      
      # Setup kubectl to deploy our app
      - uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'
      
      # Retrieve kubectl config from secrets
      - name: Configure kubectl to use org cluster
        run: |
          mkdir ~/.kube
          cat <<-EOF > ~/.kube/config
          ${{secrets.KUBE_CONFIG}}
          EOF
          
      # Use kubectl to deploy application (substitute current env vars in deployment.yml)      
      - name: Deploy application using kubernetes
        run: cat deployment.yml | envsubst | kubectl apply -f -
